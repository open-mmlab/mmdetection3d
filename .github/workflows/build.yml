name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CUDA: 10.1.105-1
      CUDA_SHORT: 10.1
      UBUNTU_VERSION: ubuntu1804
      FORCE_CUDA: 1
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        torch: [1.3.0, 1.5.0]
        include:
          - torch: 1.3.0
            torchvision: 0.4.2
            cuda_arch: "6.0"
          - torch: 1.5.0
            torchvision: 0.6.0
            cuda_arch: "7.0"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install CUDA
        run: |
          export INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
          wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
          sudo dpkg -i ${INSTALLER}
          wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
          sudo apt-key add 7fa2af80.pub
          sudo apt update -qq
          sudo apt install -y cuda-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
          sudo apt clean
          export CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
          export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${CUDA_HOME}/include:${LD_LIBRARY_PATH}
          export PATH=${CUDA_HOME}/bin:${PATH}
          sudo apt-get install -y ninja-build
      - name: Install Pillow
        run: pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}}
      - name: Install mmdet3d dependencies
        run: |
          pip install mmcv-full==1.0.0+torch${{matrix.torch}}+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html
          pip install -r requirements.txt
          pip install "git+https://github.com/open-mmlab/cocoapi.git#subdirectory=pycocotools"
          pip install -q "git+https://github.com/open-mmlab/mmdetection.git"
      - name: Lint with flake8
        run: flake8 .
      - name: Lint with isort
        run: isort --recursive --check-only --diff mmdet3d/ tools/ tests/
      - name: Format with yapf
        run: yapf -r -d mmdet3d/ tools/ configs/ tests/
      - name: Check docstring
        run: interrogate -v --ignore-init-method --ignore-module --ignore-nested-functions --ignore-regex "__repr__" --fail-under 80 mmdet3d
      - name: Build and install
        env:
          CUDA_ARCH: ${{matrix.cuda_arch}}
        run: |
          rm -rf .eggs
          python setup.py check -m -s
          TORCH_CUDA_ARCH_LIST=${CUDA_ARCH} python setup.py build_ext --inplace
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdet3d -m pytest tests/
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
